plugins {
    id "java"
    id "net.minecraftforge.gradle.forge" version "6f5327"
    id "org.spongepowered.mixin" version "d5f9873d60"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "org.jetbrains.kotlin.jvm" version "1.5.31"
}

version = "1.0.1-1.8.9"
group = "me.sad"
archivesBaseName = "Rainbow"

sourceCompatibility = targetCompatibility = 1.8

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    clientJvmArgs += "-Dfml.coreMods.load=me.sad.rainbow.core.FMLLoadingPlugin"
    clientJvmArgs += "-Dmixin.hotSwap=true"
    clientRunArgs += "--mixin rainbow.mixins.json"
    makeObfSourceJar = false
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jitpack.io/" }
    maven { url "https://repo.sk1er.club/repository/maven-releases/" }
    maven { url "https://repo.spongepowered.org/repository/maven-public/" }
    maven { url "https://repo.spongepowered.org/maven/" }
}

configurations {
    include
    implementation.extendsFrom include
    packageLib
    implementaton.extendsFrom packageLib
}

dependencies {
    include "gg.essential:loader-launchwrapper:1.1.0"
    provided "gg.essential:essential-1.8.9-forge:1291"
    packageLib("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        exclude module: 'guava'
        exclude module: 'commons-io'
        exclude module: 'gson'
    }
    annotationProcessor "org.spongepowered:mixin:0.7.11-SNAPSHOT"
}


mixin {
    add sourceSets.main, "mixins.rainbow.refmap.json"
}

jar {
    manifest.attributes(
            "TweakClass": "gg.essential.loader.stage0.EssentialSetupTweaker",
            "ModSide": "CLIENT",
            "FMLCorePluginContainsFMLMod": true,
            "FMLCorePlugin": "me.sad.rainbow.core.FMLLoadingPlugin",
            "MixinConfigs": "rainbow.mixins.json"
    )
    from {
        configurations.packageLib.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    filesMatching("mcmod.info") {
        expand "version": project.version, "mcversion": project.minecraft.version
    }
}

task moveResources {
    doLast {
        ant.move file: "${buildDir}/resources/main",
                todir: "${buildDir}/classes/java"
    }
}

moveResources.dependsOn processResources
classes.dependsOn moveResources

shadowJar {
    archiveClassifier.set("")
    configurations = [project.configurations.include]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

reobf {
    shadowJar {
        mappingType = "SEARGE"
    }
}
reobfJar.dependsOn tasks.shadowJar